import os
import numpy as np
import cv2
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC


# Set the path to your image dataset
dataset_path = "/content/drive/MyDrive/brain"

# Initialize empty lists to store images and labels
images = []
labels = []

# Set the target size for image resizing
target_size = (128, 128)

# Iterate through the folders in your dataset (each folder represents a class)
for class_folder in os.listdir(dataset_path):
    class_path = os.path.join(dataset_path, class_folder)
    for image_file in os.listdir(class_path):
        image_path = os.path.join(class_path, image_file)
        image = cv2.imread(image_path)

        # Preprocess the image (resize and normalize, you can customize this)
        image = cv2.resize(image, target_size)
        image = image / 255.0  # Normalize pixel values to the range [0, 1]

        # Flatten the image (convert to 1D array)
        image = image.flatten()

        # Add the preprocessed image to the 'images' list
        images.append(image)
        # Add the class label (e.g., class_folder) to the 'labels' list
        labels.append(class_folder)

# Convert 'images' and 'labels' to NumPy arrays
X = np.array(images)
y = np.array(labels)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define the classifiers
classifiers = {
    'RandomForest': RandomForestClassifier(random_state=42),
    
    
    'SVM': SVC(),
   
}

# Train and evaluate each classifier
accuracy = {}

for name, classifier in classifiers.items():
    classifier.fit(X_train, y_train)
    y_pred = classifier.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    accuracy[name] = acc
    print(f'{name} Accuracy: {acc}')